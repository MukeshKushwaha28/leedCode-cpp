A phrase is a palindrome if, after converting all uppercase letters into lowercase letters and removing all non-alphanumeric characters, it reads the same forward and backward. Alphanumeric characters include letters and numbers.

Given a string s, return true if it is a palindrome, or false otherwise.

 

Example 1:

Input: s = "A man, a plan, a canal: Panama"
Output: true
Explanation: "amanaplanacanalpanama" is a palindrome.
Example 2:

Input: s = "race a car"
Output: false
Explanation: "raceacar" is not a palindrome.
Example 3:

Input: s = " "
Output: true
Explanation: s is an empty string "" after removing non-alphanumeric characters.
Since an empty string reads the same forward and backward, it is a palindrome.
 

Constraints:

1 <= s.length <= 2 * 105
s consists only of printable ASCII characters.









***********************************************************
class Solution {
public:
    bool isPalindrome(string s) {
        
        string s1;

        for(int i = 0;i<s.size();i++)
        {
            if(s[i]>='A' && s[i]<='Z' || s[i]>='a' && s[i]<= 'z' || s[i]>='0' && s[i]<= '9' )
              s1+=s[i];
        }

          
       

        for(int i = 0;i<s1.size();i++)
        {
            if(s1[i]>= 'A' && s1[i]<= 'Z')
              {
                  char a = tolower(s1[i]);
                  s1[i] = a;

              }
        }
        
         string s2 = s1;
        reverse(s2.begin(),s2.end());
       
        cout<<s1<<" "<<s2<<" ";
        if(s1 == s2) return true;
        else return false;
    }
};

