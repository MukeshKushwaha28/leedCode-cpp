Given two strings needle and haystack, return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.

 

Example 1:

Input: haystack = "sadbutsad", needle = "sad"
Output: 0
Explanation: "sad" occurs at index 0 and 6.
The first occurrence is at index 0, so we return 0.
Example 2:

Input: haystack = "leetcode", needle = "leeto"
Output: -1
Explanation: "leeto" did not occur in "leetcode", so we return -1.
 

Constraints:

1 <= haystack.length, needle.length <= 104
haystack and needle consist of only lowercase English characters.





*****************************************************
class Solution {
public:
    int strStr(string s, string s1) {
        int n=s.size();
        int m=s1.size();
        if(m>n)return -1;
        int i=0;
        int j=0;
        int ans=-1;
        while(i<n-m+1)
        {
            if(s.substr(i,m)==s1)
            {
                 return i;
            }
           // cout<<s.substr(i,m)<<" ";
            i++;
        }//cout<<"\n";
        //cout<<s.substr(0,m)<<"\n";
        return -1;
    }
};
