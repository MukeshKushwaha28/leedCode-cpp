Given a string s and an integer k, reverse the first k characters for every 2k characters counting from the start of the string.

If there are fewer than k characters left, reverse all of them. If there are less than 2k but greater than or equal to k characters, then reverse the first k characters and leave the other as original.

 

Example 1:

Input: s = "abcdefg", k = 2
Output: "bacdfeg"
Example 2:

Input: s = "abcd", k = 2
Output: "bacd"
 

Constraints:

1 <= s.length <= 104
s consists of only lowercase English letters.
1 <= k <= 104





******************************************************
class Solution {
public:
    string reverseStr(string s, int k) {
        
            // // int i = 3;
            //  int n = s.size();
            // // reverse(s.begin()+i,s.end()-n+i+k);
            // int r = n%k;
            // int i = 0;
            // while(i<n-r){
                 
            //      if(n<k) break;
            //      reverse(s.begin()+i,s.end()-n+i+k); 
            //      i+=2*k;
                
            // }
            
            // if(r>=2)
            //   reverse(s.begin()+i,s.end());
            
            // return s;
            
             int index = 0;
        while(index < s.size()){
            reverse(s.begin()+index, s.begin()+index+k > s.end() ? s.end() : s.begin()+index+k);
            index += 2*k;
        }
        return s;
          
            
    }
};
