Given an array of integers nums containing n + 1 integers where each integer is in the range [1, n] inclusive.

There is only one repeated number in nums, return this repeated number.

You must solve the problem without modifying the array nums and uses only constant extra space.

 

Example 1:

Input: nums = [1,3,4,2,2]
Output: 2
Example 2:

Input: nums = [3,1,3,4,2]
Output: 3
 

Constraints:

1 <= n <= 105
nums.length == n + 1
1 <= nums[i] <= n




*************************************************************************************************************
class Solution {
public:
    int findDuplicate(vector<int>& nums) {

          sort(nums.begin(),nums.end());
         int n = nums.size();
         int c;
          for(int i = 1;i<=n;i++)
          {
              if(nums[i-1] == nums[i])
              {
                        c = nums[i];
                        break;
              }
              
          }
       
       return c;
    }
};
